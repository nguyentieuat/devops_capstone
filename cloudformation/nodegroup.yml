Description: >
  Creates the nodegroup for the Amazon EKS Cluster
Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: Luannt19-Uda

  MinSize:
    Description: Minimum number of web application server
    Type: Number
    Default: 2

  MaxSize:
    Description: Maximum number of web application servers
    Type: Number
    Default: 6

  DesiredSize:
    Description: Num instances should be created.
    Type: Number
    Default: 4

  KeyPairName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    Default: udacity

Mappings:
  ServicePrincipals:
    aws-cn:
      ec2: ec2.amazonaws.com.cn
    aws-us-gov:
      ec2: ec2.amazonaws.com
    aws:
      ec2: ec2.amazonaws.com

Resources:
  NodeInstanceRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub ${EnvironmentName}-nodegroup-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !FindInMap [ServicePrincipals, !Ref "AWS::Partition", ec2]
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      Path: /


  NodeGroup:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName: !Sub ${EnvironmentName}-cluster
      NodeRole: !GetAtt NodeInstanceRole.Arn
      NodegroupName: !Sub ${EnvironmentName}-nodegroup
      ScalingConfig:
        MinSize: !Ref MinSize
        MaxSize: !Ref MaxSize
        DesiredSize: !Ref DesiredSize
      Subnets:
        Fn::Split:
          - ","
          - Fn::ImportValue:
              Fn::Sub: ${EnvironmentName}-PUB-NETS

Outputs:
  NodeInstanceRole:
    Description: The node instance role
    Value: !GetAtt NodeInstanceRole.Arn
    Export:
      Name: !Sub ${EnvironmentName}-IR
  NodeGroup:
    Description: The node group for EKS
    Value: !Ref NodeGroup
    Export:
      Name: !Sub ${EnvironmentName}-NG
