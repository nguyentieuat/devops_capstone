---

# - name: "Fetch kubectl config"
#   hosts: management
#   user: ubuntu
#   gather_facts: false
#   become: yes

#   vars:
#     AWS_DEFAULT_REGION: "{{ lookup('env', 'AWS_DEFAULT_REGION') }}"
#     ENVIRONMENT_NAME: "{{ lookup('env', 'ENVIRONMENT_NAME') }}"

#   pre_tasks:
#     - name: Create a kubeconfig file for the cluster
#       shell: "aws eks update-kubeconfig --region {{ AWS_DEFAULT_REGION }} --name {{ ENVIRONMENT_NAME }}-cluster"

- name: "Install dependencies"
  hosts: management
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root  
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml
  pre_tasks:
    - name: "install python for Ansible."
      become: true
      raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
      changed_when: false
    - name: "Install 'unzip'"
      apt:
        name: [ "unzip" ]
        state: latest
        update_cache: yes
    - name: "Set environment variables"
      shell: |
        export AWS_ACCESS_KEY_ID=ASIAUZYACTHFYYX6AYWK
        export AWS_SECRET_ACCESS_KEY=rKI2VnCBJX88yekCUiyyT6eyoorjjJfdw6qUYsj3
        export AWS_DEFAULT_REGION=us-east-1
        export AWS_SESSION_TOKEN=FwoGZXIvYXdzEPr//////////wEaDBQqtDCAc+Vsx8nN0SLVAQI7F1eNZMZzoJSI4ckIiTKkTAkF0x8SQ3GVi3VHs+cPzsk3FkW8iP+D0KxSflHXHbJ/rh/qRQUkDj7g+brDcPlxY7GNLdz0YA18soUOMUGTdmbUF55HcXkJ3nnqRRmRNC7rCISEMv2fUiKPkx3wm30NinBtrLqQcrO6BQYchTUW43QnnilU9vMdF75px8XTI06NxIGARyftgWrKZRndHTjCgf2MeBA643rNfbXFmEg7MgUxPx7uEz03RWGbr8ywrXlMiB6MoiD3h/vByrTHsNPehhVP+Sjc1IejBjItkZGZLxyTHtWA1PcMQunzEclWa/77yVSPpP4pSM414gU/v4mZtyZ8LliQkseq
        export ENVIRONMENT_NAME=luannt19-uda
  
  roles:
    - install-awscli
    - install-kubectl

- name: "Authenticate AWS CLI with AWS"
  hosts: management
  user: ubuntu
  gather_facts: false
  become: yes
  vars:
    # AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    # AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    # AWS_SESSION_TOKEN: $AWS_SESSION_TOKEN
    # AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
    AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
    AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
    AWS_SESSION_TOKEN: "{{ lookup('env', 'AWS_SESSION_TOKEN') }}"
    AWS_DEFAULT_REGION: "{{ lookup('env', 'AWS_DEFAULT_REGION') }}"
  tasks:
    - name: Set the aws_access_key_id
      shell: "aws configure set aws_access_key_id {{ AWS_ACCESS_KEY_ID }}"
    - name: Set the aws_secret_access_key
      shell: "aws configure set aws_secret_access_key {{ AWS_SECRET_ACCESS_KEY }}"
    - name: Set the aws_session_key
      shell: "aws configure set aws_session_token {{ AWS_SESSION_TOKEN }}"
    - name: Set the default.region
      shell: "aws configure set default.region {{ AWS_DEFAULT_REGION }}"

- name: "Fetch kubectl config"
  hosts: management
  user: ubuntu
  gather_facts: false
  become: yes
  vars:
    # AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
    # ENVIRONMENT_NAME: $ENVIRONMENT_NAME
    AWS_DEFAULT_REGION: "{{ lookup('env', 'AWS_DEFAULT_REGION') }}"
    ENVIRONMENT_NAME: "{{ lookup('env', 'ENVIRONMENT_NAME') }}"
  pre_tasks:
    - name: Create a kubeconfig file for the cluster
      shell: "aws eks update-kubeconfig --region {{ AWS_DEFAULT_REGION }} --name {{ ENVIRONMENT_NAME }}-cluster"
